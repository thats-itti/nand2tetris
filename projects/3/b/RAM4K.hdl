// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
 
    Not( in = address[9] , out = comple0 );
    Not( in = address[10] , out = comple1 );
    Not( in = address[11] , out = comple2 );
    
    And( a = comple0 , b = comple1 , out = s11);
    And( a = comple2 , b = s11 , out = ss1 );

    And( a = comple2 , b = comple1 , out = s21 );
    And( a = address[9] , b = s21 , out = ss2 );

    And ( a = comple2 , b = address[10] , out = s31 );
    And ( a = comple0 , b = s31 , out = ss3);

    And( a = comple2 , b = address[10] , out = s41 );
    And( a = address[9], b = s41 , out = ss4 );

    And( a = address[11] , b = comple1 , out = s51);
    And( a = comple0 , b = s51 ,out = ss5 );

    And( a = address[11] , b = comple1 , out = s61);
    And( a = address[9] , b = s61 , out = ss6);

    And( a = address[11] , b = address[10] , out = s71);
    And( a = comple0 , b = s71 , out = ss7);

    And( a = address[11] , b = address[10] , out = s81);
    And( a = address[9] , b = s81 , out = ss8);

    
    And ( a = ss1 , b = load , out = s1 );
    And ( a = ss2 , b = load , out = s2 );
    And ( a = ss3 , b = load , out = s3 );
    And ( a = ss4 , b = load , out = s4 );
    And ( a = ss5 , b = load , out = s5 );
    And ( a = ss6 , b = load , out = s6 );
    And ( a = ss7 , b = load , out = s7 );
    And ( a = ss8 , b = load , out = s8 );

    RAM512( in = in , load = s1 ,address = address[0..8] , out = o1);
    RAM512( in = in , load = s2 ,address = address[0..8] ,  out = o2);
    RAM512( in = in , load = s3 ,address = address[0..8] ,  out = o3);
    RAM512( in = in , load = s4 ,address = address[0..8] ,  out = o4);
    RAM512( in = in , load = s5 ,address = address[0..8] ,  out = o5);
    RAM512( in = in , load = s6 ,address = address[0..8] ,  out = o6);
    RAM512( in = in , load = s7 ,address = address[0..8] ,  out = o7);
    RAM512( in = in , load = s8 ,address = address[0..8] ,  out = o8);


    Mux8Way16( a = o1 ,
             b = o2 ,
             c = o3 ,
             d = o4 ,
             e = o5 ,
             f = o6 ,
             g = o7 ,
             h = o8 ,
             sel = address[9..11],
             out = out );
    }
